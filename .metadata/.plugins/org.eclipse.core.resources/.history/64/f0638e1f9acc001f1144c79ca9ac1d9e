package chapter03;

import java.util.ArrayList;
import java.util.List;

// 제너릭 : 클래스나 메서드에서 사용할 데이터 타입을 외부에서 지정하는 방법

//Test1, Test2, Test3의 문제점
//1. 코드 중복 발생 : 유지 보수성 및 개발 속도를 낮춤
//2. 실사용의 불편 : 사용시 코드가 복잡해짐
class Test1 {
	String subject;
	int score;
}

class Test2 {
	String subject;
	double score;
}

class Test3 {
	String subject;
	char score;
}

//Test4의 문제점
//타입의 안정성을 낮춤
class Test4 {
	String subject;
	Object score;
}

//제너릭 클래스 : 클래스 내부에 있는 데이터 타입을 컴파일 시에 결정하는 클래스
//class 클래스명<매개타입> {}
class Test5<SCORE> {
	String subject;
	S score;
}

public class F_Generic {

	public static void main(String[] args) {
		
		List<Test4> tests = new ArrayList<>();
		Test4 test1 = new Test4();
		test1.subject = "국어";
		test1.score = "우수";
		tests.add(test1);
		
		Test4 test2 = new Test4();
		test2.subject = "수학";
		test2.score = 100;
		tests.add(test2);
		
		for(Test4 test: tests) {
			//int score = (int) tests.get(0).score;
			
			Test5<Integer> instance1 = new Test5<>();
		}
	}

}
